/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package finalproject;

import org.junit.jupiter.api.Test;

import java.time.LocalDate;

import static org.junit.jupiter.api.Assertions.*;

class CalculationTest {
    @Test
    void testTargetConsumption() {
        Calculation calculation = new Calculation();
        double weight = 70; // Assume weight in kg
        Target target = calculation.targetConsumption(weight);
        assertNotNull(target);
        assertEquals(140, target.getProtein());
        assertEquals(280, target.getCarb());
        assertEquals(70, target.getFat());
        assertEquals(2929, target.getCalories()); // You may need to adjust this based on the expected result
    }

    @Test
    void testConsumptionDiff() {
        Calculation calculation = new Calculation();
        Target target = new Target(150, 300, 2500, 80); // Example target values
        Target currentConsumption = new Target(100, 200, 1800, 60); // Example current consumption values
        Target diff = calculation.consumptionDiff(target, currentConsumption);
        assertNotNull(diff);
        assertEquals(50, diff.getProtein());
        assertEquals(100, diff.getCarb());
        assertEquals(700, diff.getCalories());
        assertEquals(20, diff.getFat());
    }

    @Test
    void testWeightComparison() {
        Calculation calculation = new Calculation();
        int weightBefore = 70; // Example previous weight in kg
        int currentWeight = 68; // Example current weight in kg
        String comparison = calculation.weightComparison(weightBefore, currentWeight);
        assertNotNull(comparison);
        assertTrue(comparison.contains("You have lost"));
    }

    @Test
    void testWeightComparison_GainedWeight() {
        Calculation calculation = new Calculation();
        int weightBefore = 70; // Example previous weight in kg
        int currentWeight = 72; // Example current weight in kg (gained weight)
        String comparison = calculation.weightComparison(weightBefore, currentWeight);
        assertNotNull(comparison);
        assertTrue(comparison.contains("You have gained"));
    }

    @Test
    void testWeightComparison_NoChange() {
        Calculation calculation = new Calculation();
        int weightBefore = 70; // Example previous weight in kg
        int currentWeight = 70; // Example current weight in kg (no change)
        String comparison = calculation.weightComparison(weightBefore, currentWeight);
        assertNotNull(comparison);
        assertTrue(comparison.contains("You have gained"));
    }

    @Test
    void testWeightComparison_InvalidInput() {
        Calculation calculation = new Calculation();
        int weightBefore = -70; // Example previous weight in kg (invalid input)
        int currentWeight = 68; // Example current weight in kg
        String comparison = calculation.weightComparison(weightBefore, currentWeight);
        assertNotNull(comparison);
        assertTrue(comparison.contains("You have gained"));
    }


    @Test
    void testConvertNutrition() {
        Calculation calculation = new Calculation();
        LocalDate current = LocalDate.now();
        DailyFood dailyFood = new DailyFood(123421, current,"FoodName", Category.BREAKFAST, 20); // Create a DailyFood object with necessary attributes
        String[] food = {"FoodName", "BREAKFAST", "20", "10", "300", "15"}; // Example food data
        FoodConsumed foodConsumed = calculation.convertNutrition(dailyFood, food);
        assertNotNull(foodConsumed);
        assertEquals("FoodName", foodConsumed.getName());
        assertEquals(Category.BREAKFAST, foodConsumed.getCategory());
        // Add more assertions as needed
    }

    @Test
    void testLbsToKg() {
        Calculation calculation = new Calculation();
        double lbsWeight = 154; // Example weight in lbs
        double expectedKgWeight = 69.916; // Example expected weight in kg
        double actualKgWeight = calculation.lbsToKg(lbsWeight);
        assertEquals(expectedKgWeight, actualKgWeight, 0.01); // Allowing for some precision difference
    }
}

